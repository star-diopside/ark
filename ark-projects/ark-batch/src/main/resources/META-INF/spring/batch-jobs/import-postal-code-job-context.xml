<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd">

    <import resource="classpath:/META-INF/spring/batch/simple-step-context.xml" />

    <job id="importPostalCodeJob" incrementer="jobParametersIncrementer" xmlns="http://www.springframework.org/schema/batch">

        <listeners>
            <listener ref="importPostalCodeJob.listener.TemporaryDirectory" />
        </listeners>

        <step id="importPostalCodeJob.unarchiveStep" parent="simpleStep" next="importPostalCodeJob.clearDataStep">
            <tasklet ref="importPostalCodeJob.unarchiveStep.tasklet" transaction-manager="resourcelessTransactionManager" />
        </step>

        <step id="importPostalCodeJob.clearDataStep" parent="simpleStep" next="importPostalCodeJob.importStep">
            <tasklet ref="importPostalCodeJob.clearDataStep.tasklet" transaction-manager="transactionManager" />
        </step>

        <step id="importPostalCodeJob.importStep" parent="simpleStep">
            <tasklet transaction-manager="transactionManager">
                <chunk reader="importPostalCodeJob.importStep.reader" processor="importPostalCodeJob.importStep.processor" writer="importPostalCodeJob.importStep.writer" commit-interval="100" />
            </tasklet>
        </step>

    </job>

    <bean id="importPostalCodeJob.listener.TemporaryDirectory" class="jp.gr.java_conf.star_diopside.silver.commons.batch.support.TemporaryDirectoryJobListener">
        <property name="key" value="postcode.tempDir" />
        <property name="prefix" value="postcode" />
    </bean>

    <bean id="importPostalCodeJob.unarchiveStep.tasklet" class="jp.gr.java_conf.star_diopside.ark.batch.tasklet.UnarchiveZipFileTasklet" scope="step">
        <property name="resource" value="${resource.postcode}" />
        <property name="charset" value="Windows-31J" />
        <property name="unarchiveDirectory" value="#{jobExecutionContext['postcode.tempDir']}" />
    </bean>

    <bean id="importPostalCodeJob.clearDataStep.tasklet" class="org.springframework.batch.core.step.tasklet.MethodInvokingTaskletAdapter">
        <property name="targetObject">
            <bean class="org.springframework.jdbc.core.JdbcTemplate">
                <property name="dataSource" ref="dataSource" />
            </bean>
        </property>
        <property name="targetMethod" value="execute" />
        <property name="arguments">
            <array>
                <value type="java.lang.String">
                    TRUNCATE TABLE POSTAL_CODES;
                    SELECT SETVAL('POSTAL_CODES_ID_SEQ', 1, FALSE);
                </value>
            </array>
        </property>
    </bean>

    <bean id="importPostalCodeJob.importStep.reader" class="org.springframework.batch.item.file.MultiResourceItemReader" scope="step">
        <property name="resources" value="file:#{jobExecutionContext['postcode.tempDir']}/*" />
        <property name="delegate">
            <bean class="org.springframework.batch.item.file.FlatFileItemReader">
                <property name="encoding" value="Windows-31J" />
                <property name="recordSeparatorPolicy">
                    <bean class="org.springframework.batch.item.file.separator.DefaultRecordSeparatorPolicy" />
                </property>
                <property name="lineMapper">
                    <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                        <property name="lineTokenizer">
                            <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                                <property name="names" value="localGovernmentCode,oldPostalCode,postalCode,kanaPrefectureName,kanaMunicipalityName,kanaAreaName,kanjiPrefectureName,kanjiMunicipalityName,kanjiAreaName,flag1,flag2,flag3,flag4,flag5,flag6" />
                            </bean>
                        </property>
                        <property name="fieldSetMapper">
                            <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                                <property name="targetType" value="jp.gr.java_conf.star_diopside.ark.batch.bean.PostalCodeAddress" />
                            </bean>
                        </property>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="importPostalCodeJob.importStep.processor" class="jp.gr.java_conf.star_diopside.ark.batch.item.PostalCodeConverter" />

    <bean id="importPostalCodeJob.importStep.writer" class="org.springframework.batch.item.database.JpaItemWriter" scope="step">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

</beans>
